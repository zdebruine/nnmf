// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// xxt
Eigen::MatrixXf xxt(Eigen::MatrixXf x);
RcppExport SEXP _nnmf_xxt(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXf >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(xxt(x));
    return rcpp_result_gen;
END_RCPP
}

Rcpp::List als_nmf(Eigen::MatrixXf A, const int k, const double tol,
                   const uint16_t maxit, const bool verbose,
                   const bool log_train_loss);
RcppExport SEXP _nnmf_als_nmf(SEXP ASEXP, SEXP kSEXP, SEXP tolSEXP, SEXP maxitSEXP,
                              SEXP verboseSEXP, SEXP log_train_lossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXf >::type A(ASEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const uint16_t >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool >::type log_train_loss(log_train_lossSEXP);
    rcpp_result_gen = Rcpp::wrap(als_nmf(A, k, tol, maxit, verbose, log_train_loss));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nnmf_xxt", (DL_FUNC) &_nnmf_xxt, 1},
    {"_nnmf_als_nmf", (DL_FUNC) &_nnmf_als_nmf, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_nnmf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
